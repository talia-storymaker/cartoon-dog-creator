const root = document.documentElement;

const App = Vue.createApp({
  data() {
    return {
      svgContainerStyle: {},
      /* Will be used for future functionality */
      useBrowserColorPicker: false,
      /* Color pickers shown? */
      showHeadColorPicker: false,
      showMuzzleColorPicker: false,
      showEarColorPicker: false,
      showNoseColorPicker: false,
      showEyewhiteColorPicker: false,
      showPupilColorPicker: false,
      /* Initial color info */
      headColorInfo: '#c87137',
      muzzleColorInfo: '#c87137',
      earColorInfo: '#000000',
      noseColorInfo: '#000000',
      eyewhiteColorInfo: '#ffffff',
      pupilColorInfo: '#000000',
      /* Size modifiers */
      earLengthModifier: 13,
      earWidthModifier: 10,
      noseSizeModifier: 3
    }
  },
  computed: {
    /* Colors */
    headStyle: function() {
      return this.updateColor(this.headColorInfo, 'fill');
    },
    headButtonStyle: function() {
      return this.updateColor(this.headColorInfo, 'background');
    },
    muzzleStyle: function() {
      return this.updateColor(this.muzzleColorInfo, 'fill');
    },
    muzzleButtonStyle: function() {
      return this.updateColor(this.muzzleColorInfo, 'background');
    },
    earStyle: function() {
      return this.updateColor(this.earColorInfo, 'fill');
    },
    earButtonStyle: function() {
      return this.updateColor(this.earColorInfo, 'background');
    },
    noseStyle: function() {
      return this.updateColor(this.noseColorInfo, 'fill');
    },
    noseButtonStyle: function() {
      return this.updateColor(this.noseColorInfo, 'background');
    },
    eyewhiteStyle: function() {
      return this.updateColor(this.eyewhiteColorInfo, 'fill');
    },
    eyewhiteButtonStyle: function() {
      return this.updateColor(this.eyewhiteColorInfo, 'background');
    },
    pupilStyle: function() {
      return this.updateColor(this.pupilColorInfo, 'fill');
    },
    pupilButtonStyle: function() {
      return this.updateColor(this.pupilColorInfo, 'background');
    },
    /* Sizes */
    earLength: function() {
      return this.earLengthModifier + 39;
    },
    earWidth: function() {
      return this.earWidthModifier + 14;
    },
    noseLength: function() {
      return this.noseSizeModifier + 10;
    },
    noseHeight: function() {
      return this.noseSizeModifier + 8;
    },
    /* Positions, so position stays good when items are resized */
    earXPosition: function() {
      return 150 + (24 - this.earWidth);
    },
    earYPosition: function() {
      return 148 - (52 - this.earLength);
    }
  },
  methods: {
    /* colorInfo is either the initial value, a string, or an object generated by the color picker, and handled accordingly.
    property is the CSS property to be updated with the new color, e.g. "fill" for SVG items and "background" for buttons. */
    updateColor: function(colorInfo, property) {
      let styleObject = new Object;
      if (typeof colorInfo === "object") {
        styleObject[property] = colorInfo.hex8;
      } else {
        styleObject[property] = colorInfo;
      }
      return styleObject;
    },
    anyClick: function(e) {
      if (!(e.target.matches('.color-picker') || e.target.closest('.color-picker') || e.target.matches('.color-button') || e.target.closest('.color-picker'))) {
        if (this.showHeadColorPicker || this.showMuzzleColorPicker || this.showEarColorPicker || this.showNoseColorPicker || this.showEyewhiteColorPicker || this.showPupilColorPicker) {
          this.showHeadColorPicker = false;
          this.showMuzzleColorPicker = false;
          this.showEarColorPicker = false;
          this.showNoseColorPicker = false;
          this.showEyewhiteColorPicker = false;
          this.showPupilColorPicker = false;
        }
      }
    },
    toggleColorPicker: function(bodyPart) {
      switch(bodyPart) {
        case "head": 
          this.showHeadColorPicker = !this.showHeadColorPicker;
          this.showMuzzleColorPicker = false;
          this.showEarColorPicker = false;
          this.showNoseColorPicker = false;
          this.showEyewhiteColorPicker = false;
          this.showPupilColorPicker = false;
          break;
        case "muzzle": 
          this.showMuzzleColorPicker = !this.showMuzzleColorPicker;
          this.showHeadColorPicker = false;
          this.showEarColorPicker = false;
          this.showNoseColorPicker = false;
          this.showEyewhiteColorPicker = false;
          this.showPupilColorPicker = false;
          break;
        case "ear": 
          this.showEarColorPicker = !this.showEarColorPicker;
          this.showHeadColorPicker = false;
          this.showMuzzleColorPicker = false;
          this.showNoseColorPicker = false;
          this.showEyewhiteColorPicker = false;
          this.showPupilColorPicker = false;
          break;
        case "nose": 
          this.showNoseColorPicker = !this.showNoseColorPicker;
          this.showHeadColorPicker = false;
          this.showMuzzleColorPicker = false;
          this.showEarColorPicker = false;
          this.showEyewhiteColorPicker = false;
          this.showPupilColorPicker = false;
          break;
        case "eyewhite": 
          this.showEyewhiteColorPicker = !this.showEyewhiteColorPicker;
          this.showHeadColorPicker = false;
          this.showMuzzleColorPicker = false;
          this.showEarColorPicker = false;
          this.showNoseColorPicker = false;
          this.showPupilColorPicker = false;
          break;
        case "pupil": 
          this.showPupilColorPicker = !this.showPupilColorPicker;
          this.showHeadColorPicker = false;
          this.showMuzzleColorPicker = false;
          this.showEarColorPicker = false;
          this.showNoseColorPicker = false;
          this.showEyewhiteColorPicker = false;
          break;
        default:
          console.log('The color picker to be toggled must be specified.');
      }
    },
    setSvgContainerHeight() {
      this.svgContainerStyle.height = (this.$refs.ear.getBoundingClientRect().height + 50) + 'px';
    }
  },
  mounted() {
    this.setSvgContainerHeight();
    window.addEventListener('resize', this.setSvgContainerHeight);
  }
})

App.use(VueColor);
App.mount('#app')